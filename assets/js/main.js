/* the main piece of code running the site,
When the Get Forecast button is clicked, the latitude, longitude in the imputfied is read, and saved as location, 
A new input object is the created using the inputBuilder() Function, a new weatherDataMatrix is created to recive the forecast data,
 and is the passed along to the chain of functions used to call and handle the data from the selected api*/
document.addEventListener("DOMContentLoaded", function () {
   
    $("#forecast").click(function () {
        let location = $("#lat-long").val();
        let input = new inputBuilder(location);
        console.log(typeof(location))
        if (location == '') {
            $('#warning-modal').modal('show');
            console.log('hejhopp')
        /* }else if (type(location) == ) { */

        } else if ($("#source").children("option:selected").val() == 1) {
            let worldWeatherOnlineData = new weatherDataMatrix;
            JSONP_MarineWeather(input, worldWeatherOnlineData);

        } else if ($("#source").children("option:selected").val() == 2) {
            var openWeatherData = new weatherDataMatrix;
            JSONP_openWeather(input, openWeatherData);
        };

    });
});

/*function to build request input 
Input: place, Latitude and longitude in lat,lng format ex: 35.40,2.33 */
function inputBuilder(place) {
    this.query = place;
    this.format = "json";
    this.fx = 'yes';
    this.callback;
    this.lat = place.split(',')[0];
    this.long = place.split(',')[1];
};

/* Class to asaseble and store the relevant data that has been picked out from api raw data
Properties: 
this.data: a array of arrays where one array has the data for a 3 hour section of the day.
this.cards: The HTML code needed to display the forecast. generated by this.generateCards()
Methods: 
this.add(day, time, temp, weatherDescription, precipitation, windSpeed, windDegree, windGust, swellHeight, waterTemp, imgurl)
is a method that that adds a new row of data to the matrix, it is called from the api sorting functions where the needed data is picked out of the recived json. 
this.generateCards()  Generates html code based on a template literal and the data stored in this.data 
this.display() changes the content of the html div with id card-container to the cards stored in this.cards*/


function weatherDataMatrix() {
    this.data = [
        ['day', 'time', 'temp', 'weather-description', 'precipitation', 'windspeed', 'wind-degree', 'wind-gust', 'swell-height', 'water-temp', 'imgurl']
    ];
    this.cards = "";

    this.add = function (day, time, temp, weatherDescription, precipitation, windSpeed, windDegree, windGust, swellHeight, waterTemp, imgurl) {
        this.data.push([day, time, temp, weatherDescription, precipitation, windSpeed, windDegree, windGust, swellHeight, waterTemp, imgurl]);
    };

    this.display = function () {
        document.getElementById("card-container").innerHTML = this.cards;

    };
    this.generateCards = function () {
        var day = this.data[0][0];
        var i;
        this.cards += `<div>`
        for (i = 1; i < this.data.length; i++) {
            if (this.data[i][0] !== day) {
                day = this.data[i][0];
                this.cards += `</div>
                <div class="day-container col-md-6 col-lg-4">
                    <div class="card day-card">
                        <div class="card-header">${this.data[i][0]}</div>
                        <div class="row no-gutters">
                            <div class="col-xs-3 weather-decription-box">Time</div>
                            <div class="col-xs-3 weather-decription-box">Wind m/s</div>
                            <div class="col-xs-3 weather-decription-box">Weather</div>
                            <div class="col-xs-3 weather-decription-box">Waves</div>
                        </div>
                    </div>`;
            };
            this.cards += `
            <div class="card">
                <div class="card-body">
                    <div class="row no-gutters">
                        <div class="col-xs-1 weather-card-box time-box">${this.data[i][1]}</div>
                        <div class="col-xs-2 weather-card-box wind-dir-box">${this.data[i][6]}</div>
                        <div class="col-xs-3 weather-card-box">${this.data[i][5]}<br>${this.data[i][7]}</div>
                        <div class="col-xs-3 weather-card-box"><img class="weather-icon" src="${this.data[i][10]}"/><br> ${this.data[i][4]} mm</div>
                        <div class="col-xs-1 weather-card-box">${this.data[i][2]} C</div>
                        <div class="col-xs-2 weather-card-box">${this.data[i][9]} M</div>
                    </div>
                </div>
            </div>`;
        };
        this.cards += `</div>`;
    };

};